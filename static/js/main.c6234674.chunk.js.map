{"version":3,"sources":["services/movies-api.js","ui/Button/ButtonWrap.js","ui/Input/Input.js","components/SearchBar/SearchBar.js","ui/ItemMovie/ItemMovie.js","ui/MovieDetails/MovieInclude.js","ui/MovieDetails/MovieDetails.js","components/Details/Details.js","components/MovieList/MovieList.js","components/Title/TitlePage.js","pages/Movie/Movie.js","App.js","serviceWorker.js","index.js","pages/Movie/Movie.module.css","ui/Input/Input.module.css","components/Title/TitlePage.module.css","App.module.css"],"names":["axios","defaults","baseURL","get","then","movies","data","results","console","log","id","character","planet","useStyles","makeStyles","root","color","backgroundColor","fontFamily","padding","ButtonWrap","name","toggleSortMovies","classes","className","Button","variant","href","onClick","theme","width","borderColor","fontWeight","Input","handleSubmit","placeholder","value","handleChange","css","formWrap","noValidate","autoComplete","TextField","autoFocus","label","onChange","SearchBar","searchQuery","marginLeft","spacing","margin","fontSize","lineHeight","ItemMovie","handleOpenItem","Typography","Link","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","MovieInclude","panel","items","titleName","React","useState","expanded","setExpanded","Accordion","event","isExpanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","map","item","key","url","breakpoints","up","minWidth","bullet","display","transform","title","pos","marginBottom","MovieDetails","targetMovie","characters","planets","movie","Card","episode_id","CardContent","Table","TableBody","TableRow","TableCell","director","producer","release_date","component","opening_crawl","Details","state","this","findMovieDetails","props","charactersFromSelectedMovie","planetsFromSelectedMovie","allCharacterUrlFromMovie","replace","allPlanetsUrlFromMovie","Promise","all","moviesAPI","setState","Component","MovieList","foundMovies","movieID","isOpen","length","TitlePage","louder","type","height","timeout","Movie","isSorted","sortedMovies","searchMovies","sortMovies","evt","target","preventDefault","targetId","Number","filter","flat","prevProps","prevState","toLowerCase","includes","newSortedMovies","sort","a","b","sortedMoviesFromFoundMovies","newSortedMoviesFromFoundMovies","container","bind","App","conteiner","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c6234674.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://swapi.dev/api/';\n\nexport default {\n  async getAllMovie() {\n    try {\n      const movies = await axios\n        .get(`films/?format=json`)\n        .then(movies => movies.data.results);\n      return movies;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  },\n\n  async getCharacterById(id) {\n    try {\n      const character = await axios\n        .get(`people/${id}?format=json`)\n        .then(data => data.data);\n      return character;\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  },\n\n  async getPlanetById(id) {\n    try {\n      const planet = await axios\n        .get(`planets/${id}?format=json`)\n        .then(planet => planet.data);\n      return planet;\n      // http://swapi.dev/api/planets/1/\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  },\n\n  // async getStarshipsById(id) {\n  //   try {\n  //     const starships = await axios\n  //       .get(`starships/${id}?format=json`)\n  //       .then(starship => starship.data);\n  //     console.log(starships);\n  //     return starships;\n  //     // http://swapi.dev/api/starships/2/,\n  //   } catch (error) {\n  // console.log(error);\n  // throw error;\n  // }\n  // },\n\n  // async getVehiclesById(id) {\n  //   try {\n  //     const vehicles = await axios\n  //       .get(`vehicles/${id}?format=json`)\n  //       .then(vehicle => vehicle.data);\n  //     console.log(vehicles);\n  //     return vehicles;\n  //     // http://swapi.dev/api/vehicles/4/,\n  //   } catch (error) {\n  // console.log(error);\n  // throw error;\n\n  // },\n\n  // async getSpeciesById(id) {\n  //   try {\n  //     const species = await axios\n  //       .get(`species/${id}?format=json`)\n  //       .then(species => species.data);\n  //     console.log(species);\n  //     return species;\n  //     // http://swapi.dev/api/species/1/,\n  //   } catch (error) {\n  // console.log(error);\n  // throw error;\n\n  // },\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  root: {\n    '& .MuiButton-containedPrimary': {\n      color: '#151515',\n      backgroundColor: '#FFE81F',\n      fontFamily: 'PollerOne',\n    },\n    '& .MuiButton-root': {\n      padding: '16px',\n    },\n  },\n});\n\nexport default function ButtonWrap({ name, toggleSortMovies }) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        href=\"#contained-buttons\"\n        onClick={toggleSortMovies}\n      >\n        {name}\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonWrap from '../Button/ButtonWrap';\nimport css from './Input.module.css';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      width: '200px',\n    },\n    '& .MuiFormLabel-root': {\n      borderColor: '#EEDB00',\n      fontFamily: 'Lato',\n      color: '#eeda0085',\n    },\n    '& .MuiInputBase-input': {\n      fontWeight: 300,\n      color: '#EEDB00',\n    },\n    '& .Mui-focused': {\n      color: '#EEDB00',\n    },\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#EEDB00',\n    },\n  },\n}));\n\nexport default function Input({\n  handleSubmit,\n  placeholder,\n  value,\n  handleChange,\n  toggleSortMovies,\n}) {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={css.formWrap}\n      noValidate\n      autoComplete=\"off\"\n      onClick={handleSubmit}\n    >\n      <TextField\n        className={classes.root}\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        value={value}\n        autoFocus\n        label={placeholder}\n        onChange={handleChange}\n        // type=\"search\"\n      />\n      <ButtonWrap name={'Sort'} toggleSortMovies={toggleSortMovies} />\n    </form>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Input from '../../ui/Input/Input';\n\nfunction SearchBar({\n  handleChange,\n  handleSubmit,\n  searchQuery,\n  toggleSortMovies,\n}) {\n  return (\n    <Fragment>\n      <Input\n        handleSubmit={handleSubmit}\n        handleChange={handleChange}\n        value={searchQuery}\n        placeholder={'Enter movie name'}\n        toggleSortMovies={toggleSortMovies}\n      />\n    </Fragment>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginLeft: theme.spacing(12),\n    },\n    '& .MuiTypography-colorPrimary': {\n      color: '#EEDB00',\n      width: 'fit-content',\n      margin: '0 auto',\n      fontSize: '18px',\n      lineHeight: '2',\n      fontFamily: 'PollerOne',\n    },\n  },\n}));\n\nexport default function ItemMovie({ name, id, handleOpenItem }) {\n  const classes = useStyles();\n\n  return (\n    <Typography className={classes.root}>\n      <Link href=\"#\" id={id} onClick={handleOpenItem}>\n        {name}\n      </Link>\n    </Typography>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    '& .MuiPaper-root': {\n      backgroundColor: '#ffd31d',\n    },\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n}));\n\nexport default function MovieInclude({ items, titleName }) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Accordion\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n        >\n          <Typography className={classes.secondaryHeading}>\n            {titleName}\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <ul>\n            {items.map(item => (\n              <li key={item.url}>\n                <Typography>{item.name}</Typography>\n              </li>\n            ))}\n          </ul>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n","import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport MovieInclude from './MovieInclude';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '280px',\n      fontSize: '16px',\n      [theme.breakpoints.up('sm')]: {\n        width: '500px',\n        fontSize: '18px',\n      },\n      [theme.breakpoints.up('md')]: {\n        width: '700px',\n        fontSize: '24px',\n      },\n    },\n    '& .MuiTypography-root': {\n      margin: '8px',\n      fontSize: '16px',\n      [theme.breakpoints.up('sm')]: {\n        fontSize: '18px',\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: '24px',\n      },\n    },\n    '& .MuiTableCell-root': {\n      fontSize: '16px',\n      [theme.breakpoints.up('sm')]: {\n        fontSize: '18px',\n      },\n      [theme.breakpoints.up('md')]: {\n        fontSize: '24px',\n      },\n    },\n    minWidth: 275,\n    backgroundColor: '#FFE81F85',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n}));\n\nexport default function MovieDetails({ targetMovie, characters, planets }) {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      {targetMovie.map(movie => (\n        <Card key={movie.episode_id} className={classes.root}>\n          <CardContent>\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell>Director: </TableCell>\n                  <TableCell>{movie.director}</TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell>Producer: </TableCell>\n                  <TableCell>{movie.producer}</TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell>Release date: </TableCell>\n                  <TableCell>{movie.release_date}</TableCell>\n                </TableRow>\n              </TableBody>\n            </Table>\n            <Typography variant=\"body2\" component=\"p\">\n              {movie.opening_crawl}\n            </Typography>\n            <MovieInclude items={characters} titleName={'All characters'} />\n            <MovieInclude items={planets} titleName={'All planets'} />\n          </CardContent>\n        </Card>\n      ))}\n    </Fragment>\n  );\n}\n","import React, { Component, Fragment } from 'react';\nimport moviesAPI from '../../services/movies-api';\nimport MovieDetails from '../../ui/MovieDetails/MovieDetails';\n\nclass Details extends Component {\n  state = {\n    characters: [],\n    planets: [],\n    // vehicles: [],\n    // starships: [],\n    // species: [],\n  };\n\n  componentDidMount() {\n    this.findMovieDetails();\n  }\n\n  async findMovieDetails() {\n    const {\n      charactersFromSelectedMovie,\n      planetsFromSelectedMovie,\n    } = this.props;\n\n    const allCharacterUrlFromMovie = charactersFromSelectedMovie.map(url => {\n      const forDelete = 'http://swapi.dev/api/people/';\n      const urlID = url.replace(forDelete, '');\n      return urlID;\n    });\n\n    const allPlanetsUrlFromMovie = planetsFromSelectedMovie.map(url => {\n      const forDelete = 'http://swapi.dev/api/planets/';\n      const urlID = url.replace(forDelete, '');\n      return urlID;\n    });\n\n    const characters = await Promise.all(\n      allCharacterUrlFromMovie.map(id => {\n        return moviesAPI.getCharacterById(id);\n      }),\n    );\n\n    const planets = await Promise.all(\n      allPlanetsUrlFromMovie.map(id => {\n        return moviesAPI.getPlanetById(id);\n      }),\n    );\n\n    this.setState({\n      characters,\n      // starships,\n      // vehicles,\n      planets,\n      // species,\n    });\n  }\n\n  render() {\n    const { targetMovie } = this.props;\n    const { characters, planets } = this.state;\n\n    return (\n      <Fragment>\n        <MovieDetails\n          targetMovie={targetMovie}\n          characters={characters}\n          planets={planets}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default Details;\n","import React, { Component } from 'react';\nimport ItemMovie from '../../ui/ItemMovie/ItemMovie';\nimport Details from '../Details/Details';\n\nclass MovieList extends Component {\n  // state = {};\n\n  render() {\n    const {\n      movies,\n      foundMovies,\n      handleOpenItem,\n      movieID,\n      targetMovie,\n      isOpen,\n      charactersFromSelectedMovie,\n      planetsFromSelectedMovie,\n    } = this.props;\n\n    return (\n      <ul>\n        {foundMovies.length === 0\n          ? movies.map(movie => (\n              <li key={movie.episode_id}>\n                <ItemMovie\n                  id={movie.episode_id}\n                  handleOpenItem={handleOpenItem}\n                  name={movie.title}\n                />\n                {!isOpen && movieID === movie.episode_id && (\n                  <Details\n                    movieID={movieID}\n                    targetMovie={targetMovie}\n                    charactersFromSelectedMovie={charactersFromSelectedMovie}\n                    planetsFromSelectedMovie={planetsFromSelectedMovie}\n                  />\n                )}\n              </li>\n            ))\n          : foundMovies.map(movie => (\n              <li key={movie.episode_id}>\n                <ItemMovie\n                  id={movie.episode_id}\n                  handleOpenItem={handleOpenItem}\n                  name={movie.title}\n                />\n                {!isOpen && movieID === movie.episode_id && (\n                  <Details\n                    movieID={movieID}\n                    targetMovie={targetMovie}\n                    charactersFromSelectedMovie={charactersFromSelectedMovie}\n                    planetsFromSelectedMovie={planetsFromSelectedMovie}\n                  />\n                )}\n              </li>\n            ))}\n      </ul>\n    );\n  }\n}\n\nexport default MovieList;\n\n// const MovieList = ({\n//   movies,\n//   foundMovies,\n//   handleOpenItem,\n//   movieID,\n//   targetMovie,\n//   isOpen,\n//   charactersFromSelectedMovie,\n//   planetsFromSelectedMovie,\n// }) => {\n//   console.log('foundMovies :>> ', foundMovies);\n//   return (\n// <ul>\n//   {foundMovies.length === 0\n//     ? movies.map(movie => (\n//         <li key={movie.episode_id}>\n//           <ItemMovie\n//             id={movie.episode_id}\n//             handleOpenItem={handleOpenItem}\n//             name={movie.title}\n//           />\n//           {!isOpen && movieID === movie.episode_id && (\n//             <Details\n//               movieID={movieID}\n//               targetMovie={targetMovie}\n//               charactersFromSelectedMovie={charactersFromSelectedMovie}\n//               planetsFromSelectedMovie={planetsFromSelectedMovie}\n//             />\n//           )}\n//         </li>\n//       ))\n//     : foundMovies.map(movie => (\n//         <li key={movie.episode_id}>\n//           <ItemMovie\n//             id={movie.episode_id}\n//             handleOpenItem={handleOpenItem}\n//             name={movie.title}\n//           />\n//           {!isOpen && movieID === movie.episode_id && (\n//             <Details\n//               movieID={movieID}\n//               targetMovie={targetMovie}\n//               charactersFromSelectedMovie={charactersFromSelectedMovie}\n//               planetsFromSelectedMovie={planetsFromSelectedMovie}\n//             />\n//           )}\n//         </li>\n//       ))}\n// </ul>\n//   );\n// };\n\n// export default MovieList;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport css from './TitlePage.module.css';\n\nclass TitlePage extends Component {\n  state = {};\n  render() {\n    return (\n      <Loader\n        className={css.louder}\n        type=\"ThreeDots\"\n        color=\"#EEDB00\"\n        height={100}\n        width={100}\n        timeout={3000000}\n      />\n    );\n  }\n}\n\nexport default TitlePage;\n","import React, { Component, Fragment } from 'react';\nimport moviesAPI from '../../services/movies-api';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport MovieList from '../../components/MovieList/MovieList';\nimport TitlePage from '../../components/Title/TitlePage';\nimport css from './Movie.module.css';\n\nclass Movie extends Component {\n  state = {\n    movies: [],\n    searchQuery: '',\n    foundMovies: [],\n    isSorted: false,\n    sortedMovies: [],\n    isOpen: true,\n    movieID: [],\n    targetMovie: [],\n    charactersFromSelectedMovie: [],\n    planetsFromSelectedMovie: [],\n  };\n  componentDidMount() {\n    moviesAPI.getAllMovie().then(movies => {\n      this.setState({ movies });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.searchMovies(this.state.searchQuery);\n      this.toggleSortMovies();\n      const searchedMovies = this.state.movies;\n      const foundMovies = searchedMovies.filter(movie =>\n        movie.title\n          .toLowerCase()\n          .includes(this.state.searchQuery.toLowerCase()),\n      );\n      this.setState({ foundMovies });\n    }\n  }\n\n  searchMovies = searchQuery => {\n    moviesAPI.getAllMovie(searchQuery).then(movies =>\n      this.setState({\n        movies,\n      }),\n    );\n  };\n\n  sortMovies() {\n    const sortedMovies = this.state.movies;\n    let newSortedMovies = sortedMovies;\n    if (this.state.isSorted) {\n      newSortedMovies = sortedMovies.sort((a, b) =>\n        a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1,\n      );\n    } else {\n      newSortedMovies = sortedMovies.sort((a, b) =>\n        a.title.toLowerCase() < b.title.toLowerCase() ? 1 : -1,\n      );\n    }\n    this.setState({\n      isSorted: !this.state.isSorted,\n      sortedMovies: newSortedMovies,\n    });\n\n    const sortedMoviesFromFoundMovies = this.state.foundMovies;\n    let newSortedMoviesFromFoundMovies = sortedMoviesFromFoundMovies;\n    if (this.state.isSorted) {\n      newSortedMoviesFromFoundMovies = sortedMoviesFromFoundMovies.sort(\n        (a, b) => (a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1),\n      );\n    } else {\n      newSortedMoviesFromFoundMovies = sortedMoviesFromFoundMovies.sort(\n        (a, b) => (a.title.toLowerCase() < b.title.toLowerCase() ? 1 : -1),\n      );\n    }\n    this.setState({\n      isSorted: !this.state.isSorted,\n      sortedMovies: newSortedMoviesFromFoundMovies,\n    });\n  }\n\n  toggleSortMovies = () => {\n    this.sortMovies();\n  };\n\n  handleChange = evt => {\n    this.setState({\n      searchQuery: evt.target.value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    if (this.state.searchQuery === '' || this.state.searchQuery === ' ') {\n      return;\n    }\n  };\n\n  handleOpenItem = evt => {\n    evt.preventDefault();\n    const targetId = Number(evt.target.id);\n    const foFindMovieFtomTarget = this.state.movies;\n    const targetMovie = foFindMovieFtomTarget.filter(\n      id => id.episode_id === targetId,\n    );\n    const charactersFromSelectedMovie = targetMovie\n      .map(movie => movie.characters)\n      .flat();\n    const planetsFromSelectedMovie = targetMovie\n      .map(movie => movie.planets)\n      .flat();\n\n    this.setState({\n      isOpen: !this.state.isOpen,\n      movieID: targetId,\n      targetMovie,\n      charactersFromSelectedMovie,\n      planetsFromSelectedMovie,\n    });\n  };\n\n  render() {\n    const {\n      movies,\n      searchQuery,\n      foundMovies,\n      movieID,\n      targetMovie,\n      isOpen,\n      charactersFromSelectedMovie,\n      planetsFromSelectedMovie,\n    } = this.state;\n    return (\n      <Fragment>\n        <header>\n          <h1 className={css.title}>The Star Wars</h1>\n        </header>\n        <main className={css.container}>\n          <SearchBar\n            handleChange={this.handleChange}\n            handleSubmit={this.handleSubmit}\n            searchQuery={searchQuery}\n            toggleSortMovies={this.toggleSortMovies.bind(this)}\n          />\n          {movies.length === 0 ? (\n            <TitlePage />\n          ) : (\n            <MovieList\n              isOpen={isOpen}\n              movies={movies}\n              foundMovies={foundMovies}\n              handleOpenItem={this.handleOpenItem}\n              movieID={movieID}\n              targetMovie={targetMovie}\n              charactersFromSelectedMovie={charactersFromSelectedMovie}\n              planetsFromSelectedMovie={planetsFromSelectedMovie}\n            />\n          )}\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\nimport Movies from './pages/Movie/Movie';\nimport css from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={css.conteiner}>\n      <Movies />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../src/stylesheet/style';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Movie_conteiner__3OBwt\",\"title\":\"Movie_title__3TfTe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrap\":\"Input_formWrap__1MMJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"louder\":\"TitlePage_louder__1nTlP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__1Rp_J\"};"],"sourceRoot":""}