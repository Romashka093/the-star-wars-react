{"version":3,"sources":["pages/Movie/Movie.module.css","App.module.css","services/movies-api.js","ui/Button/ButtonWrap.js","ui/Input/Input.js","components/SearchBar/SearchBar.js","ui/ItemMovie/ItemMovie.js","components/Details/Details.js","components/MovieList/MovieList.js","pages/Movie/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","defaults","baseURL","get","then","movies","data","results","console","log","id","movie","useStyles","makeStyles","theme","root","margin","spacing","color","backgroundColor","ButtonWrap","name","toggleSortMovies","classes","className","Button","variant","href","onClick","width","fontFamily","Input","handleSubmit","placeholder","value","handleChange","noValidate","autoComplete","TextField","autoFocus","label","onChange","SearchBar","searchQuery","marginLeft","ItemMovie","Typography","Link","Details","this","props","map","key","episode_id","title","opening_crawl","director","producer","release_date","Component","MovieList","foundMovies","handleOpenItem","isOpen","movieID","targetMovie","length","Movie","state","isSorted","sortedMovies","openMovie","moviesAPI","setState","searchMovies","sortMovies","evt","target","preventDefault","targetId","Number","filter","prevProps","prevState","toLowerCase","includes","newSortedMovies","sort","a","b","sortedMoviesFromFoundMovies","newSortedMoviesFromFoundMovies","css","conteiner","bind","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3bc8331.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Movie_conteiner__3OBwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__1Rp_J\"};","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://swapi.dev/api/';\n\nexport default {\n\tasync getAllMovie() {\n\t\ttry {\n\t\t\tconst movies = await axios.get(`films/`).then((movies) => movies.data.results);\n\t\t\treturn movies;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow error;\n\t\t}\n\t},\n\tasync getMovieById(id) {\n\t\ttry {\n\t\t\tconst movie = await axios.get(`films/${id}`);\n\t\t\t// .then((movie) => movie.data.results)\n\t\t\tconsole.log(movie);\n\t\t\treturn movie;\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1)\n\t\t},\n\t\t'& .MuiButton-containedPrimary': {\n\t\t\tcolor: '#151515',\n\t\t\tbackgroundColor: '#EEDB00'\n\t\t}\n\t}\n}));\n\nexport default function ButtonWrap({ name, toggleSortMovies }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick={toggleSortMovies}>\n\t\t\t\t{name}\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& > *': {\n\t\t\tmargin: theme.spacing(1),\n\t\t\twidth: '25ch'\n\t\t},\n\n\t\t'& .MuiFormLabel-root': {\n\t\t\tfontFamily: 'PollerOne'\n\t\t},\n\t\t'& .Mui-focused': {\n\t\t\tcolor: '#EEDB00'\n\t\t}\n\t}\n}));\n\nexport default function Input({ handleSubmit, placeholder, value, handleChange }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<form className={classes.root} noValidate autoComplete=\"off\" onClick={handleSubmit}>\n\t\t\t<TextField\n\t\t\t\tid=\"outlined-basic\"\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tvalue={value}\n\t\t\t\tautoFocus\n\t\t\t\tlabel={placeholder}\n\t\t\t\tonChange={handleChange}\n\t\t\t\t// type=\"search\"\n\t\t\t/>\n\t\t</form>\n\t);\n}\n","import React, { Fragment } from 'react';\nimport ButtonWrap from '../../ui/Button/ButtonWrap';\nimport Input from '../../ui/Input/Input';\n\n// import css from './SearchBar.module.css';\n\nfunction SearchBar({ handleChange, handleSubmit, searchQuery, toggleSortMovies }) {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Input\n\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\thandleChange={handleChange}\n\t\t\t\tvalue={searchQuery}\n\t\t\t\tplaceholder={'Enter movie name'}\n\t\t\t/>\n\t\t\t<ButtonWrap name={'Sort'} toggleSortMovies={toggleSortMovies} />\n\t\t</Fragment>\n\t);\n}\n\nexport default SearchBar;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& > * + *': {\n\t\t\tmarginLeft: theme.spacing(12)\n\t\t},\n\t\t'& .MuiTypography-colorPrimary': {\n\t\t\tcolor: '#EEDB00'\n\t\t}\n\t}\n}));\n\nexport default function ItemMovie({ name, id }) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Typography className={classes.root}>\n\t\t\t<Link href=\"#\" id={id}>\n\t\t\t\t{name}\n\t\t\t</Link>\n\t\t</Typography>\n\t);\n}\n","import React, { Component, Fragment } from 'react';\n// import moviesAPI from '../../services/movies-api';\n// import css from './Details.module.css';\n\nclass Details extends Component {\n\trender() {\n\t\tconst { movies } = this.props;\n\t\tconsole.log(movies);\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{movies.map((movie) => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h2 key={movie.episode_id}>{movie.title}</h2>\n\t\t\t\t\t\t<p>description: {movie.opening_crawl}</p>\n\n\t\t\t\t\t\t<table>\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>director</th>\n\t\t\t\t\t\t\t\t\t<th>producer</th>\n\t\t\t\t\t\t\t\t\t<th>release date</th>\n\t\t\t\t\t\t\t\t\t<th>director</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td>{movie.director}</td>\n\t\t\t\t\t\t\t\t\t<td>{movie.producer}</td>\n\t\t\t\t\t\t\t\t\t<td>{movie.release_date}</td>\n\t\t\t\t\t\t\t\t\t<td>{movie.director}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Details;\n","/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport ItemMovie from '../../ui/ItemMovie/ItemMovie';\nimport Details from '../Details/Details';\n\n// import css from './MovieList.module.css';\n\nconst MovieList = ({ movies, foundMovies, handleOpenItem, isOpen, movieID, targetMovie }) => {\n\treturn (\n\t\t<ul>\n\t\t\t{foundMovies.length === 0 ? (\n\t\t\t\tmovies.map((movie) => (\n\t\t\t\t\t<li key={movie.episode_id} onClick={handleOpenItem}>\n\t\t\t\t\t\t<ItemMovie\n\t\t\t\t\t\t\tid={movie.episode_id}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\thandleOpenItem={handleOpenItem}\n\t\t\t\t\t\t\tname={movie.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{movieID === movie.episode_id && <Details movies={targetMovie} />}\n\t\t\t\t\t</li>\n\t\t\t\t))\n\t\t\t) : (\n\t\t\t\tfoundMovies.map((movie) => (\n\t\t\t\t\t<li key={movie.episode_id}>\n\t\t\t\t\t\t<ItemMovie\n\t\t\t\t\t\t\tid={movie.episode_id}\n\t\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\t\thandleOpenItem={handleOpenItem}\n\t\t\t\t\t\t\tname={movie.title}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{movieID === foundMovies.episode_id && <Details movies={targetMovie} />}\n\t\t\t\t\t</li>\n\t\t\t\t))\n\t\t\t)}\n\t\t</ul>\n\t);\n};\n\nexport default MovieList;\n","import React, { Component, Fragment } from 'react';\nimport moviesAPI from '../../services/movies-api';\nimport SearchBar from '../../components/SearchBar/SearchBar';\nimport MovieList from '../../components/MovieList/MovieList';\n// import Details from '../../components/Details/Details';\nimport css from './Movie.module.css';\n\nclass Movie extends Component {\n\tstate = {\n\t\tmovies: [],\n\t\tsearchQuery: '',\n\t\tfoundMovies: [],\n\t\tisSorted: false,\n\t\tsortedMovies: [],\n\t\tisOpen: false,\n\t\tmovieID: [],\n\t\ttargetMovie: []\n\t};\n\tcomponentDidMount() {\n\t\tmoviesAPI.getAllMovie().then((movies) => {\n\t\t\tthis.setState({ movies });\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.searchQuery !== this.state.searchQuery) {\n\t\t\tthis.searchMovies(this.state.searchQuery);\n\t\t\tthis.toggleSortMovies();\n\t\t\tconst searchedMovies = this.state.movies;\n\t\t\tconst foundMovies = searchedMovies.filter((movie) =>\n\t\t\t\tmovie.title.toLowerCase().includes(this.state.searchQuery.toLowerCase())\n\t\t\t);\n\t\t\tthis.setState({ foundMovies });\n\t\t}\n\t}\n\t// componentWillUnmount() {\n\t// \t// убрать слушатели после componentDidMount\n\t// }\n\n\topenMovie = (id) => {\n\t\tmoviesAPI.getMovieById(id).then((movies) => {\n\t\t\tconst movieID = movies.data.results;\n\t\t\tthis.setState({ movieID });\n\t\t});\n\t};\n\n\tsearchMovies = (searchQuery) => {\n\t\tmoviesAPI.getAllMovie(searchQuery).then((movies) =>\n\t\t\tthis.setState({\n\t\t\t\tmovies\n\t\t\t})\n\t\t);\n\t};\n\n\tsortMovies() {\n\t\tconst sortedMovies = this.state.movies;\n\t\tlet newSortedMovies = sortedMovies;\n\t\tif (this.state.isSorted) {\n\t\t\tnewSortedMovies = sortedMovies.sort((a, b) => (a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1));\n\t\t} else {\n\t\t\tnewSortedMovies = sortedMovies.sort((a, b) => (a.title.toLowerCase() < b.title.toLowerCase() ? 1 : -1));\n\t\t}\n\t\tthis.setState({\n\t\t\tisSorted: !this.state.isSorted,\n\t\t\tsortedMovies: newSortedMovies\n\t\t});\n\n\t\tconst sortedMoviesFromFoundMovies = this.state.foundMovies;\n\t\tlet newSortedMoviesFromFoundMovies = sortedMoviesFromFoundMovies;\n\t\tif (this.state.isSorted) {\n\t\t\tnewSortedMoviesFromFoundMovies = sortedMoviesFromFoundMovies.sort(\n\t\t\t\t(a, b) => (a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1)\n\t\t\t);\n\t\t} else {\n\t\t\tnewSortedMoviesFromFoundMovies = sortedMoviesFromFoundMovies.sort(\n\t\t\t\t(a, b) => (a.title.toLowerCase() < b.title.toLowerCase() ? 1 : -1)\n\t\t\t);\n\t\t}\n\t\tthis.setState({\n\t\t\tisSorted: !this.state.isSorted,\n\t\t\tsortedMovies: newSortedMoviesFromFoundMovies\n\t\t});\n\t}\n\n\ttoggleSortMovies = () => {\n\t\tthis.sortMovies();\n\t};\n\n\thandleChange = (evt) => {\n\t\tthis.setState({\n\t\t\tsearchQuery: evt.target.value\n\t\t});\n\t};\n\n\thandleSubmit = (evt) => {\n\t\tevt.preventDefault();\n\t\tif (this.state.searchQuery === '' || this.state.searchQuery === ' ') {\n\t\t\treturn;\n\t\t}\n\t};\n\n\thandleOpenItem = (evt) => {\n\t\tconst targetId = Number(evt.target.id);\n\t\tconst foFindMovieFtomTarget = this.state.movies;\n\t\tconst targetMovie = foFindMovieFtomTarget.filter((id) => id.episode_id === targetId);\n\t\tconsole.log('targetMovie', targetMovie);\n\t\tthis.setState({\n\t\t\tisOpen: !this.state.isOpen,\n\t\t\tmovieID: targetId,\n\t\t\ttargetMovie\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { movies, searchQuery, foundMovies, isOpen, movieID, targetMovie } = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<header>\n\t\t\t\t\t<h1>The Star Wars movies</h1>\n\t\t\t\t</header>\n\t\t\t\t<main className={css.conteiner}>\n\t\t\t\t\t<SearchBar\n\t\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\t\t\ttoggleSortMovies={this.toggleSortMovies.bind(this)}\n\t\t\t\t\t/>\n\t\t\t\t\t<MovieList\n\t\t\t\t\t\tisOpen={isOpen}\n\t\t\t\t\t\tmovies={movies}\n\t\t\t\t\t\tfoundMovies={foundMovies}\n\t\t\t\t\t\thandleOpenItem={this.handleOpenItem}\n\t\t\t\t\t\tmovieID={movieID}\n\t\t\t\t\t\ttargetMovie={targetMovie}\n\t\t\t\t\t/>\n\t\t\t\t\t{/* <Details /> */}\n\t\t\t\t</main>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Movie;\n","import React from 'react';\nimport Movies from './pages/Movie/Movie';\nimport css from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={css.conteiner}>\n      <Movies />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../src/stylesheet/style';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}